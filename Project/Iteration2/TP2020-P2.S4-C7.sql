-- IGNORAMOS O NUM DE PESSOAS
CREATE OR REPLACE FUNCTION FNCDISPONIBILIDADERESERVA(P_TIPOQUARTO NUMBER, P_DATA DATE, P_DURACAO NUMBER, P_NUMPESSOAS
    NUMBER)
    RETURN
        BOOLEAN IS
    TIPOQUARTO_INVALIDO EXCEPTION;
    DATA_INVALIDA EXCEPTION;
    DURACAO_INVALIDA EXCEPTION;
    AUX_DATA_FIM           DATE;
    AUX_ID_QUARTO_POSSIVEL NUMBER;
BEGIN

    -- VERIFICA AS EXCECOES PARA OS PARAMETROS INSERIDOS;
    IF (P_TIPOQUARTO <> 1 AND P_TIPOQUARTO <> 2 AND P_TIPOQUARTO <> 3) THEN
        RAISE TIPOQUARTO_INVALIDO;
    ELSIF P_DATA < SYSDATE THEN
        RAISE DATA_INVALIDA;
    ELSIF P_DURACAO <= 0 THEN
        RAISE DURACAO_INVALIDA;
    ELSIF (P_TIPOQUARTO IS NULL OR P_DATA IS NULL OR P_DURACAO IS NULL) THEN
        RAISE NO_DATA_FOUND;
    END IF;

    -- SOMA A DURACAO PRETENDIDA A DATA DE INICIO PARA OBTER A DATA DO CHECKOUT
    AUX_DATA_FIM := P_DATA + P_DURACAO;

    -- VERIFICA SE EXISTE ALGUM QUARTO QUE NAO TENHA O CHECKIN FEITO NA MESMA DATA DE INICIO DA RESERVA E O CHECOUT
    -- FEITO NA MESMA DATA DE FIM DA RESERVA E SE O TIPO DESSE QUARTO E O TIPO PRETENDIDO PARA A RESERVA. DESTA
    -- MANEIRA FICAMOS APENAS COM OS QUARTOS QUE SAO DO TIPO QUE PRETENDEMOS E NAO PERTENCEM A NENHUMA RESERVA E
    -- PODEM SER ALOCADOS PARA A RESERVA QUE QUEREMOS FAZER
    SELECT Q.ID
    INTO AUX_ID_QUARTO_POSSIVEL
    FROM QUARTO Q
    WHERE (Q.ID NOT IN (SELECT CI.ID_QUARTO
                        FROM CHECKIN CI
                                 JOIN CHECKOUT CO ON CI.ID_RESERVA = CO.ID_RESERVA
                        WHERE CI.DATA = P_DATA
                          AND CO.DATA = AUX_DATA_FIM))
      AND Q.ID_TIPO_QUARTO = P_TIPOQUARTO FETCH FIRST ROW ONLY;

    IF AUX_ID_QUARTO_POSSIVEL > 0 THEN
        DBMS_OUTPUT.PUT_LINE('RESERVA POSSIVEL');
        RETURN TRUE;
    ELSE
        DBMS_OUTPUT.PUT_LINE('RESERVA IMPOSSIVEL');
        RETURN FALSE;
    END IF;

EXCEPTION
    WHEN TIPOQUARTO_INVALIDO THEN
        DBMS_OUTPUT.PUT_LINE('TIPO DE QUARTO PARA A RESERVA NAO EXISTENTE');
        RETURN NULL;
    WHEN DATA_INVALIDA THEN
        DBMS_OUTPUT.PUT_LINE('DATA DA RESERVA INVALIDA');
        RETURN NULL;
    WHEN DURACAO_INVALIDA THEN
        DBMS_OUTPUT.PUT_LINE('DURACAO DA RESERVA INVALIDA');
        RETURN NULL;
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('PARAMETRO(S) NULO(S)');
        RETURN NULL;
END;