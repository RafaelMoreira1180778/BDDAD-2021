CREATE OR REPLACE FUNCTION FNCGETQUARTORESERVA(ID_RESERVA_PARAM NUMBER) RETURN NUMBER
AS
    ID_QUARTO_ALOCAR NUMBER;
    DATA_RESERVA     DATE;
    ESTADO_RESERVA   NUMBER;
BEGIN

    -- INICIA O VALOR DO ESTADO DE RESERVA A 0 PARA VERIFICAR SE EXISTE RESERVA
    ESTADO_RESERVA := 0;

    -- VAI COLOCAR DENTRO DAS VARIAVEIS DATA_RESERVA E ESTADO_RESERVA A DATA DA RESERVA A PROCURAR E O ID DO ESTADO
    -- DA MESMA CASO ELA EXISTA, SENAO O VALOR ESTADO_RESERVA FICA A 0
    SELECT R.DATA_ENTRADA, R.ID_ESTADO_RESERVA
    INTO DATA_RESERVA, ESTADO_RESERVA
    FROM RESERVA R
    WHERE R.ID = ID_RESERVA_PARAM;

    -- CONDICOES PARA VERIFICAR SE O PARAMETRO INTRODUZIDO E VALIDO
    IF ID_RESERVA_PARAM IS NULL THEN
        RETURN NULL;
    ELSIF ESTADO_RESERVA = 2 OR ESTADO_RESERVA = 3 OR ESTADO_RESERVA = 4 OR ESTADO_RESERVA = 5 THEN
        RETURN NULL;
    ELSIF ESTADO_RESERVA = 0 THEN
        RETURN NULL;
    END IF;

    -- VAI SELECIONAR O ID DO QUARTO QUE: 1) ESTA NO MENOR ANDAR E 2) TEM O MENOR NUM DE OCUPACOES NO ULTIMO ANO,
    -- TENDO EM CONTA SE A DATA DA RESERVA NAO ESTA NA TABELA DE CHECKIN E CHECKOUT (ENTRE AS DUAS DATAS) (CASO
    -- ESTEJA DESCARTA ESSE ID). FETCH FIRST ROW ONLY PORQUE A PRIMEIRA LINHA DA PROCURA CUMPRE OS PARAMETROS
    -- PRETENDIDOS
    SELECT Q.ID
    INTO ID_QUARTO_ALOCAR
    FROM QUARTO Q
             JOIN CHECKIN CI ON Q.ID = CI.ID_QUARTO
             JOIN RESERVA R ON CI.ID_RESERVA = R.ID
             JOIN CHECKOUT CO ON R.ID = CO.ID_RESERVA
    WHERE R.DATA_ENTRADA >= TRUNC(SYSDATE, 'YEAR')
      AND R.DATA_ENTRADA < ADD_MONTHS(TRUNC(SYSDATE, 'YEAR'), 12)
      AND DATA_RESERVA NOT BETWEEN CI.DATA AND CO.DATA
    GROUP BY Q.ID, Q.ID_ANDAR
    ORDER BY Q.ID_ANDAR, COUNT(R.DATA_SAIDA - R.DATA_ENTRADA)
        FETCH FIRST ROW ONLY;

    RETURN ID_QUARTO_ALOCAR;

END;